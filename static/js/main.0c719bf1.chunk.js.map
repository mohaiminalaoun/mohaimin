{"version":3,"sources":["logo.svg","data/suggestionsData.js","face.svg","SearchBox.js","SuggestionsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","suggestionItemsData","href","text","tags","SearchBox","onFocus","onKeyUp","evt","val","target","value","key","props","searchTriggerFn","finalSearchQuery","showSuggestionFn","selectedSugIndex","onBlur","hideSuggestionFn","tempClass","this","shouldShowSuggestion","className","id","input","autoComplete","React","Component","SuggestionsList","hoverOnItem","inputValue","parseInt","currentTarget","document","getElementById","blur","sugList","style","left","offsetLeft","top","offsetTop","offsetHeight","width","offsetWidth","url","innerHTML","split","window","open","query","toLowerCase","matchingSuggestions","SuggestionsData","filter","item","indexOf","numMatches","length","curSelIdx","Math","abs","count","searchHistory","map","floor","random","listItems","onMouseDown","doAction","onMouseOver","listDiv","App","triggerSearch","txt","isEnterPressed","classList","getElementsByClassName","selText","innerText","dispatch","type","payload","children","startingText","idx","updateDimensions","logoCont","inputDiv","clientWidth","documentElement","clientHeight","min","render","imageDiv","src","logo","alt","face","addEventListener","removeEventListener","connect","state","Boolean","location","hostname","match","initialState","store","createStore","action","Object","assign","unshift","pop","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,kC,eCsC3CD,EAAOC,QAAS,CAAEC,oBAtCU,CAC1B,CACEC,KAAM,6CACNC,KAAM,0BACNC,KAAM,oHAER,CACEF,KAAM,6CACNC,KAAM,oBACNC,KAAM,gDAER,CACEF,KAAM,wCACNC,KAAM,iCACNC,KAAM,qDAER,CACEF,KAAM,6CACNC,KAAM,8BACNC,KAAM,2IAER,CACEF,KAAM,oCACNC,KAAM,2BACNC,KAAM,mCAER,CACEF,KAAM,wCACNC,KAAM,gCACNC,KAAM,gFAER,CACEF,KAAM,mDACNC,KAAM,mCACNC,KAAM,iG,iBClCVL,EAAOC,QAAU,IAA0B,kC,qOCyC5BK,G,iNArCbC,QAAU,a,EAGVC,QAAU,SAACC,GACT,IAAMC,EAAMD,EAAIE,OAAOC,MACP,UAAZH,EAAII,IAEN,EAAKC,MAAMC,gBAAgBL,EAAK,EAAKI,MAAME,kBAAkB,GACxC,cAAZP,EAAII,IACb,EAAKC,MAAMG,iBAAiBP,EAAK,EAAKI,MAAMI,iBAAiB,GACxC,YAAZT,EAAII,IACb,EAAKC,MAAMG,iBAAiBP,EAAK,EAAKI,MAAMI,iBAAiB,GAE7D,EAAKJ,MAAMG,iBAAiBP,I,EAGhCS,OAAS,SAACV,GACR,EAAKK,MAAMM,oB,wEAGT,IAAIC,EAAY,cAAeC,KAAKR,MAAMS,qBAAuB,YAAc,IAC/E,OACE,yBAAKC,UAAU,oBACb,2BACAC,GAAG,YACHb,MAAOU,KAAKI,MACZnB,QAASe,KAAKf,QACdY,OAAQG,KAAKH,OACbX,QAASc,KAAKd,QACdmB,aAAa,MACbH,UAAYH,S,GA/BEO,IAAMC,Y,yBCkEfC,E,YA9Db,WAAYhB,GAAQ,IAAD,8BACjB,4CAAMA,KA2BRiB,YAAc,SAACtB,GACb,EAAKK,MAAMG,iBAAiB,EAAKH,MAAMkB,WAAYC,SAASxB,EAAIyB,cAAcT,GAAI,MA7BjE,E,sEAIVhB,GACP,IAAIiB,EAAQS,SAASC,eAAe,uBAChCV,GACFA,EAAMW,S,2CAOR,IAAMX,EAAQS,SAASC,eAAe,aAChCE,EAAUH,SAASC,eAAe,kBACpCV,GAASY,IACXA,EAAQC,MAAMC,KAAOd,EAAMe,WAAa,KACxCH,EAAQC,MAAMG,IAAMhB,EAAMiB,UAAYjB,EAAMkB,aAAe,KAC3DN,EAAQC,MAAMM,MAAQnB,EAAMoB,YAAc,Q,+BAIrCrC,GACP,IACIsC,EADMtC,EAAIyB,cAAcc,UACdC,MAAM,UAAU,GAAGA,MAAM,MAAM,GACzCC,OAAOC,KAAKJ,EAAK,Y,+BAMb,IAAD,OACDK,EAAQ9B,KAAKR,MAAMkB,YAAcV,KAAKR,MAAMkB,WAAWqB,cAEzDC,EADsBC,IAAgBrD,oBACIsD,QAAO,SAAAC,GACnD,IAAItD,EAAOsD,EAAKtD,KACZC,EAAOqD,EAAKrD,KACZC,EAAOoD,EAAKpD,KAChB,OAA4C,IAArCF,EAAKkD,cAAcK,QAAQN,KAAqD,IAAtChD,EAAKiD,cAAcK,QAAQN,KAAsD,IAAtC/C,EAAKgD,cAAcK,QAAQN,MAErHO,EAAaL,EAAoBM,OACjCC,EAAaC,KAAKC,IAAIzC,KAAKR,MAAMI,kBAAoByC,EACrDK,EAAQ,EACRC,EAAgB3C,KAAKR,MAAMmD,cAAcC,KAAK,SAACT,GACjD,OAAO,wBAAIhC,GAAIgC,EAAM5C,IAAMiD,KAAKK,MAAM,IAAuB,IAAhBL,KAAKM,UAAmBX,EAAMjC,UAAU,0BAA0BiC,MAE7GY,EAAYf,EAAoBY,KAAI,SAAAT,GAEtC,OADAO,IACO,wBAAIM,YAAa,EAAKC,SAAU9C,GAAKuC,EAAM,EAAG,UAAUnD,IAAK4C,EAAKrD,KAAMoE,YAAa,EAAKzC,YACrFP,UAAW,mBAAmBqC,IAAcG,EAAM,EAAI,QAAU,KAClE,uBAAG7D,KAAMsD,EAAKtD,MAAd,IAAsBsD,EAAKrD,KAA3B,SAGRqE,EAAW,yBAAKjD,UAAU,kBAAkBC,GAAG,kBAChC4C,EACAJ,GAEjB,OAAO3C,KAAKR,MAAMS,qBAAuBkD,EAAU,S,GA5D3B7C,IAAMC,W,0CCK9B6C,G,iNAEJC,cAAgB,SAACC,EAAK5D,EAAkB6D,GAEtC,IAAMC,EAAY3C,SAAS4C,uBAAuB,SAC5CC,EAAUF,GAAaA,EAAU,IAAMA,EAAU,GAAGG,UACtDD,GACF,EAAKlE,MAAMoE,SAAU,CACnBC,KAAM,iBACNC,QAAS,CACLpE,iBAAkBgE,KAGpBF,EAAU,IAAMA,EAAU,GAAGO,UAC/BnC,OAAOC,KAAK2B,EAAU,GAAGO,SAAS,GAAGlF,KAAM,WAEpC0E,GACT,EAAK/D,MAAMoE,SAAU,CACnBC,KAAM,iBACNC,QAAS,CACLpE,iBAAkB4D,M,EAK5B3D,iBAAmB,SAACqE,GAA2B,IAAbC,EAAY,uDAAN,EACtC,EAAKzE,MAAMoE,SAAU,CACnBC,KAAM,mBACNC,QAAS,CACL7D,sBAAsB,EACtB+D,aAAcA,EACdpE,iBAAkBqE,M,EAK1BnE,iBAAmB,SAACkE,GAClB,EAAKxE,MAAMoE,SAAU,CACnBC,KAAM,mBACNC,QAAS,CACL7D,sBAAsB,M,EAkB9BiE,iBAAmB,WACjB,IAAMC,EAAWtD,SAASC,eAAe,kBACnCsD,EAAWvD,SAASC,eAAe,aAInCuD,GAHWxD,SAASC,eAAe,aACvBsD,EAASjD,WACRiD,EAAS5C,YACRX,SAASyD,gBAAgBD,aACvCE,EAAe1D,SAASyD,gBAAgBC,aAI1CJ,IACFA,EAASlD,MAAMC,KAAQmD,EAAY,EAAK,KAAM7B,KAAKgC,IAAIH,EAAYE,GAAkB,O,EAIzFE,OAAS,WACP,IAAMC,EAAW,6BACf,yBAAKvE,GAAG,iBAAiBD,UAAU,kBACjC,yBAAKyE,IAAKC,IAAM1E,UAAU,WAAW2E,IAAI,SACzC,yBAAKF,IAAKC,IAAM1E,UAAU,kBAAkB2E,IAAI,UAEhD,6BACE,yBAAKF,IAAKG,IAAM5E,UAAU,cAAc2E,IAAI,WAKlD,OAEI,yBAAK3E,UAAU,cAET,kBAAC,EAAD,CAAWT,gBAAiB,EAAK4D,cACtB3D,iBAAkB,EAAKF,MAAME,iBAC7BC,iBAAkB,EAAKA,iBACvBG,iBAAkB,EAAKA,iBACvBG,qBAAsB,EAAKT,MAAMS,qBACjCL,iBAAkB,EAAKJ,MAAMI,mBAExC,kBAAC,EAAD,CACWK,qBAAsB,EAAKT,MAAMS,qBACjCS,WAAY,EAAKlB,MAAMwE,aACvBrE,iBAAkB,EAAKA,iBACvBgD,cAAe,EAAKnD,MAAMmD,cAC1B/C,iBAAkB,EAAKJ,MAAMI,mBAExC8E,I,mFA1DV1E,KAAKkE,mBACLtC,OAAOmD,iBAAiB,SAAU/E,KAAKkE,oB,6CAOvCtC,OAAOoD,oBAAoB,SAAUhF,KAAKkE,sB,GAtD5B5D,IAAMC,YA0HT0E,eAVS,SAAAC,GAAK,MAAK,CAC9BxF,iBAAkBwF,EAAMxF,iBACxBO,qBAAsBiF,EAAMjF,qBAC5B+D,aAAckB,EAAMlB,aACpBpE,iBAAkBsF,EAAMtF,iBACxB+C,cAAeuC,EAAMvC,iBAKVsC,CAAyB7B,G,OCxHpB+B,QACW,cAA7BvD,OAAOwD,SAASC,UAEe,UAA7BzD,OAAOwD,SAASC,UAEhBzD,OAAOwD,SAASC,SAASC,MACvB,2DCTN,IAAMC,EAAe,CACjB7F,iBAAkB,KAClBO,sBAAsB,EACtB+D,aAAc,GACdpE,iBAAkB,EAClB+C,cAAe,IA+Bb6C,EAAQC,aA3BE,WAAmC,IAAlCP,EAAiC,uDAAzBK,EAAcG,EAAW,uCAC9C,MAAkB,cAAdA,EAAO7B,KACFqB,EACgB,qBAAdQ,EAAO7B,KACT8B,OAAOC,OAAO,GAAIL,EAAc,CACjCtF,qBAAsByF,EAAO5B,QAAQ7D,qBACrC+D,aAAc0B,EAAO5B,QAAQE,aAC7BpE,iBAAkB8F,EAAO5B,QAAQlE,iBACjC+C,cAAeuC,EAAMvC,gBAEJ,qBAAd+C,EAAO7B,KACT8B,OAAOC,OAAO,GAAIL,EAAc,CACjCtF,qBAAsByF,EAAO5B,QAAQ7D,qBACrCP,iBAAkBwF,EAAMxF,mBAEP,mBAAdgG,EAAO7B,MAChB0B,EAAa5C,cAAckD,QAAQH,EAAO5B,QAAQpE,kBAC9C6F,EAAa5C,cAAcL,OAAO,GACpCiD,EAAa5C,cAAcmD,MAEtBH,OAAOC,OAAO,GAAIL,EAAc,CACjC7F,iBAAkBgG,EAAO5B,QAAQpE,oBAGlCwF,IAKTtD,OAAOmE,8BAAgCnE,OAAOmE,gCAIhDC,IAASvB,OAAO,kBAAC,IAAD,CAAUe,MAAOA,GACf,kBAAC,EAAD,OACW3E,SAASC,eAAe,SD4E/C,kBAAmBmF,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0c719bf1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.01003c50.svg\";","const suggestionItemsData = [\n  {\n    href: \"https://www.linkedin.com/in/mohaiminalaoun\",\n    text: \"What is his experience?\",\n    tags: \"job history work digital reasoning digitalreasoning vanderbilt vanderbiltuniversity microstrategy micro strategy\"\n  },\n  {\n    href: \"https://www.linkedin.com/in/mohaiminalaoun\",\n    text: \"Mohaimin's resume\",\n    tags: \"school experience resume cv curriculum vitae\"\n  },\n  {\n    href: \"https://www.github.com/mohaiminalaoun\",\n    text: \"What are some of his projects?\",\n    tags: \"work side projects experiments hobbies spare time\"\n  },\n  {\n    href: \"https://www.linkedin.com/in/mohaiminalaoun\",\n    text: \"Where did he go to college?\",\n    tags: \"school study education vanderbilt vanderbiltuniversity computer science computerscience cs bachelor masters degree major minor graduate\"\n  },\n  {\n    href: \"mailto:mohaimin.al.aoun@gmail.com\",\n    text: \"How to contact Mohaimin?\",\n    tags: \"email phone send message letter\"\n  },\n  {\n    href: \"https://www.last.fm/user/ifElseReturn\",\n    text: \"What music does he listen to?\",\n    tags: \"music songs listen hobby hobbies time spare guitar piano drums hear ear play\"\n  },\n  {\n    href: \"https://www.goodreads.com/user/show/82712266-moh\",\n    text: \"What books does he like reading?\",\n    tags: \"books book read hobby hobbies time spare fiction nonfiction study paperback pursue library\"\n  }\n];\n\nmodule.exports= { suggestionItemsData };\n","module.exports = __webpack_public_path__ + \"static/media/face.01df9ea9.svg\";","import React from 'react';\nimport './SearchBox.css';\n\nclass SearchBox extends React.Component{\n  onFocus = () => {\n    // TODO: add style changess\n  }\n  onKeyUp = (evt) => {\n    const val = evt.target.value\n    if (evt.key === 'Enter') {\n      // call the search function defined in App component\n      this.props.searchTriggerFn(val, this.props.finalSearchQuery, true);\n    } else if (evt.key === 'ArrowDown') {\n      this.props.showSuggestionFn(val, this.props.selectedSugIndex+1);\n    } else if (evt.key === 'ArrowUp') {\n      this.props.showSuggestionFn(val, this.props.selectedSugIndex-1);\n    } else {\n      this.props.showSuggestionFn(val);\n    }\n  }\n  onBlur = (evt) => {\n    this.props.hideSuggestionFn();\n  }\n  render() {\n      let tempClass = \"searchbox \"+ (this.props.shouldShowSuggestion ? \"searching\" : \"\");\n      return (\n        <div className=\"search-container\">\n          <input\n          id=\"searchbox\"\n          value={this.input}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyUp={this.onKeyUp}\n          autoComplete=\"off\"\n          className= {tempClass}></input>\n        </div>\n      );\n  }\n}\n\n\nexport default SearchBox;\n","import React from 'react';\nimport './SuggestionsList.css';\nimport SuggestionsData from './data/suggestionsData';\n\n\nclass SuggestionsList extends React.Component{\n\n  constructor(props) {\n    super(props);\n  }\n\n  changeFn(evt) {\n    var input = document.getElementById(\"suggestionListInput\");\n    if (input) {\n      input.blur()\n    }\n  }\n\n\n  componentDidUpdate() {\n\n    const input = document.getElementById(\"searchbox\"),\n          sugList = document.getElementById(\"suggestionList\");\n    if (input && sugList) {\n      sugList.style.left = input.offsetLeft + \"px\";\n      sugList.style.top = input.offsetTop + input.offsetHeight + \"px\";\n      sugList.style.width = input.offsetWidth + \"px\";\n    }\n  }\n\n  doAction(evt) {\n    let str = evt.currentTarget.innerHTML,\n        url = str.split('href=\"')[1].split('\">')[0];\n        window.open(url, \"_blank\");\n  }\n  hoverOnItem = (evt) => {\n    this.props.showSuggestionFn(this.props.inputValue, parseInt(evt.currentTarget.id, 10));\n  }\n\n  render() {\n    const query = this.props.inputValue && this.props.inputValue.toLowerCase();\n    let suggestionItemsData = SuggestionsData.suggestionItemsData;\n    let matchingSuggestions = suggestionItemsData.filter(item => {\n      let href = item.href,\n          text = item.text,\n          tags = item.tags;\n      return href.toLowerCase().indexOf(query)!==-1 || text.toLowerCase().indexOf(query)!== -1 || tags.toLowerCase().indexOf(query)!== -1;\n    });\n    let numMatches = matchingSuggestions.length;\n    let curSelIdx = (Math.abs(this.props.selectedSugIndex) % numMatches);\n    let count = 0;\n    let searchHistory = this.props.searchHistory.map( (item) => {\n      return <ul id={item} key={(Math.floor(1000 + Math.random() * 9000))+(item)}className=\"suggestionItem history\">{item}</ul>\n    });\n    let listItems = matchingSuggestions.map(item => {\n      count++;\n      return <ul onMouseDown={this.doAction} id={(count-1)+\"sugItem\"}key={item.text} onMouseOver={this.hoverOnItem}\n                  className={\"suggestionItem \"+(curSelIdx === count-1 ? \"hover\" : '')}>\n                <a href={item.href}> {item.text} </a>\n              </ul>\n    });\n    let listDiv = (<div className=\"suggestionsList\" id=\"suggestionList\">\n                      {listItems}\n                      {searchHistory}\n                    </div>);\n      return this.props.shouldShowSuggestion ? listDiv : null;\n  }\n}\n\nexport default SuggestionsList;\n","import React from 'react';\nimport SearchBox from './SearchBox';\n// import SearchResult from './SearchResult';\nimport SuggestionsList from './SuggestionsList';\nimport { connect } from 'react-redux';\nimport logo from './logo.svg';\nimport face from './face.svg'\n//import half from './half.svg';\nimport './App.css';\n\nclass App extends React.Component{\n\n  triggerSearch = (txt, finalSearchQuery, isEnterPressed) => {\n    // temporary function to find items with class hover\n    const classList = document.getElementsByClassName('hover'),\n          selText = classList && classList[0] && classList[0].innerText;\n    if (selText) {\n      this.props.dispatch( {\n        type: 'addSearchQuery',\n        payload: {\n            finalSearchQuery: selText\n          }\n      });\n      if (classList[0] && classList[0].children) {\n        window.open(classList[0].children[0].href, \"_blank\");\n      }\n    } else if (isEnterPressed) {\n      this.props.dispatch( {\n        type: 'addSearchQuery',\n        payload: {\n            finalSearchQuery: txt\n          }\n      });\n    }\n  }\n  showSuggestionFn = (startingText, idx = 0) => {\n    this.props.dispatch( {\n      type: 'showSuggestionFn',\n      payload: {\n          shouldShowSuggestion: true,\n          startingText: startingText,\n          selectedSugIndex: idx\n        }\n    });\n  }\n\n  hideSuggestionFn = (startingText) => {\n    this.props.dispatch( {\n      type: 'hideSuggestionFn',\n      payload: {\n          shouldShowSuggestion: false\n        }\n    });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  /**\n   * Remove event listener\n   */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n\n  updateDimensions = () => {\n    const logoCont = document.getElementById(\"logo-container\"),\n          inputDiv = document.getElementById(\"searchbox\"),\n          halfLogo = document.getElementById(\"half-logo\"),\n          inputLeft = inputDiv.offsetLeft,\n          inputWidth = inputDiv.offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          clientHeight = document.documentElement.clientHeight,\n          selfWidth = 0.125 * clientWidth,\n          paddingPx = 0.1 * clientHeight,\n          hLWidth = 0.05 * clientWidth;\n    if (logoCont) {\n      logoCont.style.left = (clientWidth/2 - (0.125*Math.min(clientWidth,clientHeight))) + \"px\";\n    }\n  }\n\n  render = () => {\n    const imageDiv = <div>\n      <div id=\"logo-container\" className=\"logo-container\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <img src={logo} className=\"App-logo shadow\" alt=\"logo\" />\n      </div>\n        <div>\n          <img src={face} className=\"face-avatar\" alt=\"logo\" />\n        </div>\n      </div>\n    //  <img src={half} id = \"half-logo\" className=\"App-logo shadow half\" alt=\"logo\" />\n\n    return (\n\n        <div className=\"background\">\n\n              <SearchBox searchTriggerFn={this.triggerSearch}\n                         finalSearchQuery={this.props.finalSearchQuery}\n                         showSuggestionFn={this.showSuggestionFn}\n                         hideSuggestionFn={this.hideSuggestionFn}\n                         shouldShowSuggestion={this.props.shouldShowSuggestion}\n                         selectedSugIndex={this.props.selectedSugIndex}>\n              </SearchBox>\n              <SuggestionsList\n                         shouldShowSuggestion={this.props.shouldShowSuggestion}\n                         inputValue={this.props.startingText}\n                         showSuggestionFn={this.showSuggestionFn}\n                         searchHistory={this.props.searchHistory}\n                         selectedSugIndex={this.props.selectedSugIndex}>\n              </SuggestionsList>\n             {imageDiv}\n              {/*{this.state.finalSearchQuery ? <SearchResult content={this.state.finalSearchQuery}> </SearchResult> : null}*/}\n        </div>\n\n      );\n    }\n}\n\nconst mapStateToProps = state => ({\n    finalSearchQuery: state.finalSearchQuery,\n    shouldShowSuggestion: state.shouldShowSuggestion,\n    startingText: state.startingText,\n    selectedSugIndex: state.selectedSugIndex,\n    searchHistory: state.searchHistory\n  });\n\n\n\nexport default connect(mapStateToProps)(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst initialState = {\n    finalSearchQuery: null,\n    shouldShowSuggestion: false,\n    startingText: '',\n    selectedSugIndex: 0,\n    searchHistory: []\n};\n\n/* Should move this reducer to a different file*/\nconst reducer = (state = initialState, action) => {\n    if (action.type==='undefined') {\n      return state;\n    } else if (action.type===\"showSuggestionFn\") {\n      return Object.assign({}, initialState, {\n            shouldShowSuggestion: action.payload.shouldShowSuggestion,\n            startingText: action.payload.startingText,\n            selectedSugIndex: action.payload.selectedSugIndex,\n            searchHistory: state.searchHistory\n          })\n    } else if (action.type===\"hideSuggestionFn\") {\n      return Object.assign({}, initialState, {\n            shouldShowSuggestion: action.payload.shouldShowSuggestion,\n            finalSearchQuery: state.finalSearchQuery // need to make sure finalSearchQuery is not set to null again\n          });\n    } else if (action.type===\"addSearchQuery\") {\n      initialState.searchHistory.unshift(action.payload.finalSearchQuery);\n      if (initialState.searchHistory.length>3) {\n        initialState.searchHistory.pop();\n      }\n      return Object.assign({}, initialState, {\n            finalSearchQuery: action.payload.finalSearchQuery\n          })\n    }\n    return state;\n}\n\nconst store = createStore(\n  reducer, /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(<Provider store={store}>\n                  <App/>\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}