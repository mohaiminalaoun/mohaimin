{"version":3,"sources":["logo.svg","data/suggestionsData.js","face.svg","half.svg","SearchBox.js","SearchResult.js","SuggestionsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","suggestionItemsData","href","text","tags","SearchBox","props","onFocus","onKeyUp","evt","val","target","value","key","searchTriggerFn","finalSearchQuery","showSuggestionFn","selectedSugIndex","onBlur","hideSuggestionFn","tempClass","this","shouldShowSuggestion","className","id","input","autoComplete","React","Component","connect","SuggestionsList","hoverOnItem","inputValue","parseInt","currentTarget","document","getElementById","blur","sugList","style","left","offsetLeft","top","offsetTop","offsetHeight","width","offsetWidth","url","innerHTML","split","window","open","query","toLowerCase","matchingSuggestions","SuggestionsData","filter","item","indexOf","numMatches","length","curSelIdx","Math","abs","count","listItems","map","onMouseDown","doAction","onMouseOver","listDiv","App","triggerSearch","txt","classList","getElementsByClassName","selText","innerText","setState","children","startingText","idx","updateDimensions","logoCont","inputDiv","clientWidth","documentElement","clientHeight","min","render","imageDiv","src","logo","alt","face","state","addEventListener","removeEventListener","Boolean","location","hostname","match","store","createStore","actions","console","log","dispatch","type","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.91019706.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.01003c50.svg\";","const suggestionItemsData = [\n  {\n    href: \"https://www.linkedin.com/in/mohaiminalaoun\",\n    text: \"What is his experience?\",\n    tags: \"job history work digital reasoning digitalreasoning vanderbilt vanderbiltuniversity microstrategy micro strategy\"\n  },\n  {\n    href: \"https://www.linkedin.com/in/mohaiminalaoun\",\n    text: \"Mohaimin's resume\",\n    tags: \"school experience resume cv curriculum vitae\"\n  },\n  {\n    href: \"https://www.github.com/mohaiminalaoun\",\n    text: \"What are some of his projects?\",\n    tags: \"work side projects experiments hobbies spare time\"\n  },\n  {\n    href: \"https://www.linkedin.com/in/mohaiminalaoun\",\n    text: \"Where did he go to college?\",\n    tags: \"school study education vanderbilt vanderbiltuniversity computer science computerscience cs bachelor masters degree major minor graduate\"\n  },\n  {\n    href: \"mailto:mohaimin.al.aoun@gmail.com\",\n    text: \"How to contact Mohaimin?\",\n    tags: \"email phone send message letter\"\n  },\n  {\n    href: \"https://www.last.fm/user/ifElseReturn\",\n    text: \"What music does he listen to?\",\n    tags: \"music songs listen hobby hobbies time spare guitar piano drums hear ear play\"\n  },\n  {\n    href: \"https://www.goodreads.com/user/show/82712266-moh\",\n    text: \"What books does he like reading?\",\n    tags: \"books book read hobby hobbies time spare fiction nonfiction study paperback pursue library\"\n  }\n];\n\nmodule.exports= { suggestionItemsData };\n","module.exports = __webpack_public_path__ + \"static/media/face.01df9ea9.svg\";","module.exports = __webpack_public_path__ + \"static/media/half.d09969cb.svg\";","import React from 'react';\nimport './SearchBox.css';\nimport { connect } from 'react-redux';\n\nclass SearchBox extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n  onFocus = () => {\n    // TODO: add style changess\n  }\n  onKeyUp = (evt) => {\n    const val = evt.target.value\n    if (evt.key === 'Enter') {\n      // call the search function defined in App component\n      this.props.searchTriggerFn(val, this.props.finalSearchQuery);\n    } else if (evt.key === 'ArrowDown') {\n      this.props.showSuggestionFn(val, this.props.selectedSugIndex+1);\n    } else if (evt.key === 'ArrowUp') {\n      this.props.showSuggestionFn(val, this.props.selectedSugIndex-1);\n    } else {\n      this.props.showSuggestionFn(val);\n    }\n  }\n  onBlur = (evt) => {\n    this.props.hideSuggestionFn();\n  }\n  render() {\n      let tempClass = \"searchbox \"+ (this.props.shouldShowSuggestion ? \"searching\" : \"\");\n      return (\n        <div className=\"search-container\">\n          <input\n          id=\"searchbox\"\n          value={this.input}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onKeyUp={this.onKeyUp}\n          autoComplete=\"off\"\n          className= {tempClass}></input>\n        </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => ({\n  count: state.count\n})\n\nexport default connect()(SearchBox);\n","import React from 'react';\nimport './SearchResult.css';\n\nclass SearchResult extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let resultString = (this.props.content === 'Resume' || this.props.content === 'resume') ?\n      \"Here's Mohaimin's resume\" : \"Sorry your search returned no results.\"\n      return (\n        <div className=\"result-container\">\n          <div className=\"result-text\">{resultString}</div>\n        </div>\n      );\n  }\n}\n\nexport default SearchResult;\n","import React from 'react';\nimport './SuggestionsList.css';\nimport SuggestionsData from './data/suggestionsData';\n\n\nclass SuggestionsList extends React.Component{\n\n  constructor(props) {\n    super(props);\n  }\n\n  changeFn(evt) {\n    var input = document.getElementById(\"suggestionListInput\");\n    if (input) {\n      input.blur()\n    }\n  }\n\n\n  componentDidUpdate() {\n\n    const input = document.getElementById(\"searchbox\"),\n          sugList = document.getElementById(\"suggestionList\");\n    if (input && sugList) {\n      sugList.style.left = input.offsetLeft + \"px\";\n      sugList.style.top = input.offsetTop + input.offsetHeight + \"px\";\n      sugList.style.width = input.offsetWidth + \"px\";\n    }\n  }\n\n  doAction(evt) {\n    let str = evt.currentTarget.innerHTML,\n        url = str.split('href=\"')[1].split('\">')[0];\n        window.open(url, \"_blank\");\n  }\n  hoverOnItem = (evt) => {\n    this.props.showSuggestionFn(this.props.inputValue, parseInt(evt.currentTarget.id, 10));\n  }\n\n  render() {\n    const query = this.props.inputValue && this.props.inputValue.toLowerCase();\n    let suggestionItemsData = SuggestionsData.suggestionItemsData;\n    let matchingSuggestions = suggestionItemsData.filter(item => {\n      let href = item.href,\n          text = item.text,\n          tags = item.tags;\n      return href.toLowerCase().indexOf(query)!==-1 || text.toLowerCase().indexOf(query)!== -1 || tags.toLowerCase().indexOf(query)!== -1;\n    });\n    let numMatches = matchingSuggestions.length;\n    let curSelIdx = (Math.abs(this.props.selectedSugIndex) % numMatches);\n    let count = 0;\n    let listItems = matchingSuggestions.map(item => {\n      count++;\n      return <ul onMouseDown={this.doAction} id={(count-1)+\"sugItem\"}key={item.text} onMouseOver={this.hoverOnItem}\n                  className={\"suggestionItem \"+(curSelIdx === count-1 ? \"hover\" : '')}>\n                <a href={item.href}> {item.text} </a>\n              </ul>\n    });\n    let listDiv = (<div className=\"suggestionsList\" id=\"suggestionList\">\n                      {listItems}\n                    </div>);\n      return this.props.shouldShowSuggestion ? listDiv : null;\n  }\n}\n\nexport default SuggestionsList;\n","import React from 'react';\nimport SearchBox from './SearchBox';\nimport SearchResult from './SearchResult';\nimport SuggestionsList from './SuggestionsList';\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport logo from './logo.svg';\nimport face from './face.svg'\nimport half from './half.svg';\nimport './App.css';\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      finalSearchQuery: null,\n      shouldShowSuggestion: false,\n      startingText: '',\n      selectedSugIndex: 0\n    }\n  }\n\n\n  triggerSearch = (txt) => {\n    // temporary function to find items with class hover\n    const classList = document.getElementsByClassName('hover'),\n          selText = classList && classList[0] && classList[0].innerText;\n    if (selText) {\n      this.setState({finalSearchQuery: selText});\n      if (classList[0] && classList[0].children) {\n        window.open(classList[0].children[0].href, \"_blank\");\n      }\n    }\n  }\n  showSuggestionFn = (startingText, idx = 0) => {\n    this.setState({\n      shouldShowSuggestion: true,\n      startingText: startingText,\n      selectedSugIndex: idx\n    });\n  }\n\n  hideSuggestionFn = (startingText) => {\n    this.setState({\n      shouldShowSuggestion: false,\n      startingText: startingText\n    });\n  }\n\n  componentDidMount() {\n    this.updateDimensions();\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  /**\n   * Remove event listener\n   */\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n\n  updateDimensions = () => {\n    const logoCont = document.getElementById(\"logo-container\"),\n          inputDiv = document.getElementById(\"searchbox\"),\n          halfLogo = document.getElementById(\"half-logo\"),\n          inputLeft = inputDiv.offsetLeft,\n          inputWidth = inputDiv.offsetWidth,\n          clientWidth = document.documentElement.clientWidth,\n          clientHeight = document.documentElement.clientHeight,\n          selfWidth = 0.125 * clientWidth,\n          paddingPx = 0.1 * clientHeight,\n          hLWidth = 0.05 * clientWidth;\n    logoCont.style.left = (clientWidth/2 - (0.125*Math.min(clientWidth,clientHeight))) + \"px\";\n  }\n\n  render = () => {\n    const imageDiv = <div>\n      <div id=\"logo-container\" className=\"logo-container\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <img src={logo} className=\"App-logo shadow\" alt=\"logo\" />\n      </div>\n        <div>\n          <img src={face} className=\"face-avatar\" alt=\"logo\" />\n        </div>\n      </div>\n    //  <img src={half} id = \"half-logo\" className=\"App-logo shadow half\" alt=\"logo\" />\n\n    return (\n\n        <div className=\"background\">\n\n              <SearchBox searchTriggerFn={this.triggerSearch}\n                         finalSearchQuery={this.state.finalSearchQuery}\n                         showSuggestionFn={this.showSuggestionFn}\n                         hideSuggestionFn={this.hideSuggestionFn}\n                         shouldShowSuggestion={this.state.shouldShowSuggestion}\n                         selectedSugIndex={this.state.selectedSugIndex}>\n              </SearchBox>\n              <SuggestionsList\n                         shouldShowSuggestion={this.state.shouldShowSuggestion}\n                         inputValue={this.state.startingText}\n                         showSuggestionFn={this.showSuggestionFn}\n                         selectedSugIndex={this.state.selectedSugIndex}>\n              </SuggestionsList>\n              {imageDiv}\n              {/*{this.state.finalSearchQuery ? <SearchResult content={this.state.finalSearchQuery}> </SearchResult> : null}*/}\n        </div>\n\n      );\n    }\n}\n\nconst mapStateToProps = state => ({\n  count: state.count\n})\n\nexport default connect()(App); // export connected component\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n/* Should move this reducer to a different file*/\nconst reducer = (state, actions) => {\n  console.log(\"reducer is called\")\n  console.log(state);\n  console.log(actions);\n  return state;\n}\n\nconst store = createStore(reducer);\n\nstore.dispatch({\n  type: \"INCREMENT\"\n})\n\nReactDOM.render(<Provider store={store}>\n                  <App/>\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}